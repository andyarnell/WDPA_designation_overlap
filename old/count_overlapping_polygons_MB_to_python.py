# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# count_overlapping_polygons_MB_tppython.py
# Created on: 2016-05-19 15:46:12.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: count_overlapping_polygons_MB_tppython <Input_Features> <Output_Feature_Class> 
# Description: 
# Given a polygon feature class or layer containing overlapping polygons, creates a new feature class with the overlaps removed and the number of overlapping polygons.
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy

for val in listValsBth[startNum:]:
        beginTime1 = time.clock()
        i += 1
    
arcpy.Intersect_analysis(in_features="gridZAF #;WDPA_June2015_shapefile_polygons #",out_feature_class="C:/Data/test/wdpa_intersect.gdb/zaf_precise_int",join_attributes="ALL",cluster_tolerance="#",output_type="INPUT")
arcpy.Dissolve_management(in_features="zaf_precise_int",out_feature_class="C:/Data/test/wdpa_intersect.gdb/zaf_precise_int_Diss",dissolve_field="FID_gridZAF;DESIG_ENG",statistics_fields="#",multi_part="MULTI_PART",unsplit_lines="DISSOLVE_LINES")
arcpy.Union_analysis(in_features="zaf_precise_int_Diss #",out_feature_class="C:/Data/test/wdpa_intersect.gdb/zaf_precise_int_diss_uni",join_attributes="ALL",cluster_tolerance="#",gaps="GAPS")
arcpy.CountOverlappingPolygons_overlap(Input_Features="zaf_precise_int_diss_uni",Output_Feature_Class="C:/Data/test/wdpa_intersect.gdb/zaf_precise_int_diss_uni_cnt")


# Script arguments
#Input_Features = arcpy.GetParameterAsText(0)
Input_Features= Output_Feature_Class

#Output_Feature_Class = arcpy.GetParameterAsText(1)
Output_Feature_Class = 
#####################################

# Local variables:
Spaghetti = Input_Features
oidfield = Spaghetti
Meatballs = Spaghetti
count_overlaps = Meatballs
Features_to_Delete = Output_Feature_Class
Features_Deleted = Features_to_Delete
Delete_succeeded = Features_Deleted
in_memory = "in_memory"
empty = "in_memory\\empty"




# Process: Create Feature Class
arcpy.CreateFeatureclass_management(in_memory, "empty", "POINT", "", "DISABLED", "DISABLED", "", "", "0", "0", "0")

# Process: Feature To Polygon
arcpy.FeatureToPolygon_management(Spaghetti, empty, "NO_ATTRIBUTES", )

# Process: Calculate Value
arcpy.CalculateValue_management("GetOidFieldName(r\"%Spaghetti%\")", "import arcpy\\ndef GetOidFieldName(path):\\n  fc = arcpy.Describe(path)\\n  return fc.oidfieldname\\n\\n  ", "Field")

# Process: Feature To Point
arcpy.FeatureToPoint_management(Spaghetti, Meatballs, "INSIDE")

# Process: Spatial Join
arcpy.SpatialJoin_analysis(Meatballs, Input_Features, count_overlaps, "JOIN_ONE_TO_ONE", "KEEP_ALL", "", "WITHIN", "", "")

# Process: Join Field
arcpy.JoinField_management(Spaghetti, oidfield, count_overlaps, "ORIG_FID", "Join_Count")

# Process: Make Feature Layer
arcpy.MakeFeatureLayer_management(Output_Feature_Class, Features_to_Delete, "Join_Count = 0", "", "FID_empty FID_empty VISIBLE NONE;SHAPE_length SHAPE_length VISIBLE NONE;SHAPE_area SHAPE_area VISIBLE NONE;Join_Count Join_Count VISIBLE NONE")

arcpy.SpatialJoin_analysis(Meatballs, Input_Features, count_overlaps, "JOIN_ONE_TO_ONE", "KEEP_ALL", "", "WITHIN", "", "")

# Process: Delete Features
arcpy.DeleteFeatures_management(Features_to_Delete)

# Process: Delete
arcpy.Delete_management(Features_to_Delete, "")


####################
arcpy.SpatialJoin_analysis(target_features="gridZAF",join_features="zaf_precise_int_diss_uni_cnt",out_feature_class="C:/Data/test/wdpa_intersect.gdb/zaf_precise_int_diss_uni_cnt_join",join_operation="JOIN_ONE_TO_MANY",join_type="KEEP_ALL",
                           field_mapping="""Join_Count "Join_Count" true true false 4 Long 0 0 ,First,#,zaf_precise_int_diss_uni_cnt,Join_Count,-1,-1""",match_option="HAVE_THEIR_CENTER_IN",search_radius="#",distance_field_name="#")


arcpy.Statistics_analysis(in_table="zaf_precise_int_diss_uni_cnt_join",out_table="C:/Data/test/wdpa_intersect.gdb/zaf_precise_int_diss_uni_cnt_join_stat",statistics_fields="Join_Count MAX",case_field="OBJECTID")

print("Elapsed time (minutes): " + str((time.clock() - beginTime1)/60))

